# 高维矩阵乘


import numpy as np

#二维乘二维
a=np.linspace(1,6,6).reshape(2,3).astype(int)
b = np.array([[1,0,0],[0,1,0],[0,0,1]]) #单位矩阵
# ab:
#  [[1 2 3]
#  [4 5 6]]
c = np.matmul(a,b)
print('a:\n',a)
print('b:\n',b)
print('ab:\n',c)

#三维乘一维
a = np.linspace(1,12,12).reshape(2,2,3).astype(int)
b = np.array([1,1,1])
# 就是[2,3]*[1,1]，结果是[2,1]，然后堆叠变成[2,2]
# ab:
#  [[ 6 15]
#  [24 33]]
c = np.matmul(a,b)
print('a:\n',a)
print('b:\n',b)
print('ab:\n',c)

# 三维乘二维
# 相当于三维矩阵里的二维分量分别与二维矩阵相乘，再拼接起来
a=np.linspace(1,12,12).reshape(2,2,3).astype(int)
b = np.array([[1,0,0],[0,1,0],[0,0,1]]) #单位矩阵
# ab:
#  [[[ 1  2  3]
#   [ 4  5  6]]
#
#  [[ 7  8  9]
#   [10 11 12]]]
c = np.matmul(a,b)
print('a:\n',a)
print('b:\n',b)
print('ab:\n',c)

#四维乘二维
a=np.linspace(1,24,24).reshape(2,2,2,3).astype(int)
b = np.array([[1,0,0],[0,1,0],[0,0,1]]) #单位矩阵
c = np.matmul(a,b)
print('a:\n',a)
# a:
#  [[[[ 1  2  3]
#    [ 4  5  6]]
#   [[ 7  8  9]
#    [10 11 12]]]
#  [[[13 14 15]
#    [16 17 18]]
#   [[19 20 21]
#    [22 23 24]]]]
print('b:\n',b)
print('ab:\n',c)
# ab:
#  [[[[ 1  2  3]
#    [ 4  5  6]]
#
#   [[ 7  8  9]
#    [10 11 12]]]
#
#
#  [[[13 14 15]
#    [16 17 18]]
#
#   [[19 20 21]
#    [22 23 24]]]]

# 所有大于二维的，最终都是以二维为基础堆叠在一起的！！
# 所以在矩阵运算的时候，其实最后都可以转成我们常见的二维矩阵运算，遵循的原则是：
# 在多维矩阵相乘中，需最后两维满足shape匹配原则，最后两维才是有数据的矩阵，前面的维度只是矩阵的排列而已！